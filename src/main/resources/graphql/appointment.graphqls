type Appointment {
    id: ID!
    scheduledDate: String!
    status: String!
    requestedServiceIds: [String]
    customerId: String!
    vehicleId: String!

    requestedServices: [Servicio]
    customer: User
    vehicle: Vehicle
}

input AppointmentDto{
    scheduledDate: String!
    status: String
    requestedServiceIds: [String]!
    customerId: String!
    vehicleId: String!
}

type Query{
    appointments: [Appointment]
    appointmentsPag(offset: Int, limit: Int): Pagination
    appointment(id: ID!): Appointment
    appointmentsByCustomer(customerId: String!): [Appointment]
    appointmentsByCustomerPag(customerId: String!,offset: Int, limit: Int): Pagination
    pendingAppointments: [Appointment]
    pendingAppointmentsPag(offset: Int, limit: Int): Pagination
}

type Mutation{
    createAppointment(appointmentDto: AppointmentDto!): Appointment
    updateAppointment(id: ID!, appointmentDto: AppointmentDto): Appointment
    deleteAppointment(id: ID!): Appointment
}

schema {
    query: Query,
    mutation: Mutation
}